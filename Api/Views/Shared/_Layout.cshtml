@using static Models.Constants.ApplicationConstants;
@using Api.Interfaces
@using Dal.Extensions
@using Logic.Extensions
@using Api.Extensions
@using Api.Utilities
@using Models.Constants
@using Models.Enums
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment Env
@inject IHttpRequestUtilityBuilder RequestUtilityBuilder;
@inject GlobalConfigs GlobalConfigs;
@inject CacheBustingUtility CacheBustingUtility;

@{
    var utility = RequestUtilityBuilder.For(Context);
    var cacheBustingKey = CacheBustingUtility.CacheBustingKey();
    var themes = Themes;
    var info = await utility.GetUserInfo();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title> @(!string.IsNullOrWhiteSpace(ViewBag.Title) ? ViewBag.Title : ApplicationName) </title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    @* jQuery*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

    <script src="https://gitcdn.xyz/repo/PrestaShop/jquery.live-polyfill/master/dist/jquery.live-polyfill.min.js"></script>

    @* angular *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.0/angular.min.js"></script>

    @* bootstrap *@
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    @if (!string.IsNullOrEmpty(GlobalConfigs.Theme) && !"default".Equals(GlobalConfigs.Theme, StringComparison.CurrentCultureIgnoreCase))
    {
        <link rel="stylesheet" href="~/styles/themes/@(themes[GlobalConfigs.Theme])?@cacheBustingKey"/>
    }

    @* sanitize *@
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.0/angular-sanitize.js"></script>

    @* underscore *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.10.2/underscore-min.js"></script>

    @* angular loading progress bar *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/angular-loading-bar/0.9.0/loading-bar.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-loading-bar/0.9.0/loading-bar.min.js"></script>
    
    @* Input validator *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://raw.githack.com/sandrocaseiro/jquery.validate.unobtrusive.bootstrap/master/jquery.validate.unobtrusive.bootstrap.min.js"></script>
    
    @* markdown *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/1.1.1/marked.min.js"></script>

    @* angular + bootstrap toggle *@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/angular-bootstrap-toggle@0.4.0/dist/angular-bootstrap-toggle.min.css">
    <script src="https://cdn.jsdelivr.net/npm/angular-bootstrap-toggle@0.4.0/dist/angular-bootstrap-toggle.min.js"></script>

    @* font-awesome *@
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">

    @* tags input *@
    <link rel="stylesheet" href="https://mbenford.github.io/ngTagsInput/css/ng-tags-input.min.css"/>
    <link href="https://mbenford.github.io/ngTagsInput/css/ng-tags-input.bootstrap.min.css"/>
    <script src="https://mbenford.github.io/ngTagsInput/js/ng-tags-input.min.js"></script>

    @* moment.js *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.27.0/moment.min.js"></script>

    @* styles *@
    <link rel="stylesheet" href="~/styles/style.css#@(cacheBustingKey)">

    <script>
        window.isAuthenticated = @(utility.IsAuthenticated().ToString().ToLower());
        window.user = @Html.Raw(info.ToJson());
    </script>
</head>
<body ng-app="ideaBoardApp">

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="~/"> @ApplicationName </a>
        </div>
        <div class="collapse navbar-collapse" id="myNavbar">
            <ul class="nav navbar-nav">
                <li class="@(ViewContext.RouteData.Matches("Home") ? "active" : "")">
                    <a href="~/"> Board </a>
                </li>

                <li class="@(ViewContext.RouteData.Matches("About") ? "active" : "")">
                    <a href="~/About"> About </a>
                </li>

                @if (utility.IsAuthenticated())
                {
                }

                @if (info.UserRoleEnum == UserRoleEnum.Admin)
                {
                    <li class="@(ViewContext.RouteData.Matches("User") ? "active" : "")">
                        <a href="~/User">Users</a>
                    </li>

                    <li class="@(ViewContext.RouteData.Matches("Admin") ? "active" : "")">
                        <a href="~/Admin">Admin</a>
                    </li>
                }
            </ul>

            <ul class="nav navbar-nav navbar-right">
                @if (!utility.IsAuthenticated())
                {
                    <li class="@(ViewContext.RouteData.Matches("Account", "Register") ? "active" : "")">
                        <a href="~/Account/Register"><span class="glyphicon glyphicon-user"></span> Register </a>
                    </li>
                    <li class="@(ViewContext.RouteData.Matches("Account", "Login") ? "active" : "")">
                        <a href="~/Account/login"><span class="glyphicon glyphicon-log-in"></span> Login </a>
                    </li>
                }
                else
                {
                    if (info.UserRoleEnum == UserRoleEnum.Admin)
                    {
                        <li class="@(ViewContext.RouteData.Matches("Config") ? "active" : "")">
                            <a href="~/Config"><span class="glyphicon glyphicon-wrench"></span> Config </a>
                        </li>
                    }

                    <li class="@(ViewContext.RouteData.Matches("Projects") ? "active" : "")">
                        <a href="~/Projects"><span class="glyphicon glyphicon-grain"></span> Projects </a>
                    </li>

                    <li class="@(ViewContext.RouteData.Matches("Profile") ? "active" : "")">
                        <a href="~/Profile"><span class="glyphicon glyphicon-user"></span> Profile</a>
                    </li>
                    <li class="@(ViewContext.RouteData.Matches("Logout") ? "active" : "")">
                        <a href="~/Account/Logout"><span class="glyphicon glyphicon-log-out"></span> Logout</a>
                    </li>
                }
            </ul>

            @if (GlobalConfigs.Theme == "flatly")
            {
                <div class="navbar-form navbar-right hidden-xs hidden-sm" ng-controller="darkModeCtrl">
                    <div class="form-group">
                        <toggle ng-model="darkMode"
                                toggle-class="active"
                                on="<i class='fa fa-moon-o' aria-hidden='true'></i>"
                                off="<i class='fa fa-sun-o' aria-hidden='true'></i>">
                        </toggle>
                    </div>
                </div>
            }
        </div>
    </div>
</nav>

@if (!ViewData.GetOrElse("ErrorKey", null).IsNull())
{
    <div class="container">

        <div class="alert alert-danger">
            <p class="preserve-linebreak">
                <strong> @(ViewData["ErrorKey"])</strong> 
                
                <br />@(ViewData["ErrorValues"])
            </p>
        </div>
    </div>
}

@if (!ViewData.GetOrElse("Message", null).IsNull())
{
    <div class="container">

        <div class="alert alert-success">
            <p class="preserve-linebreak">
                @(ViewData["Message"])
            </p>
        </div>
    </div>
}


<div class="container-fluid" ng-cloak>
    @RenderBody()
</div>

<mini-profiler position="RenderPosition.Right"/>


<script src="@Url.Content($"~/scripts/script.js#{cacheBustingKey}")"></script>


<environment names="Production">
    <!-- Start of Woopra Code -->
    <script>
      (function(){
        var t,i,e,n=window,o=document,a=arguments,s="script",r=["config","track","identify","visit","push","call","trackForm","trackClick"],c=function(){var t,i=this;for(i._e=[],t=0;r.length>t;t++)(function(t){i[t]=function(){return i._e.push([t].concat(Array.prototype.slice.call(arguments,0))),i}})(r[t])};for(n._w=n._w||{},t=0;a.length>t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src="//static.woopra.com/js/w.js",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e)
      })("woopra");
    
      woopra.config({
          domain: 'anahita.dev'
      });
      woopra.track();
    </script>
    <!-- End of Woopra Code -->
    
    @if (utility.IsAuthenticated())
    {
        <script>
          /* Place this on a template where a customer initially is identified
             or after authentication. (Important: Update these values) */
          woopra.identify({
            //email: "<<YOUR CUSTOMER EMAIL HERE>>",
            name: "@(info.Username)"
          });
        
          // The identify code should be added before the "track()" function
          woopra.track();
        </script>
    }
</environment>

</body>
</html>
